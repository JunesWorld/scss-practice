/* 
[중첩] 
- 기본적으로 후손선택자
- 자식선택자로 명시하고 싶다면 >(띄어쓰기)
- 하지만, 우리는 기본적으로 후손선택자를 사용한다. 
[SassMeister]
- Sass를 Css로 변환된 것을 한눈에 보여주는 Site!
*/
.container {
  ul {
    li {
      font-size: 40px;
      .name {
        color: royalblue;
      }
      .age {
        color: orange;
      }
    }
  }
}

/* 
[& - 상위 선택자 참조]
- 쉽게 말해 상위 선택자가 &자리에 치환되어 들어간다.
- [css]
- .btn.active
- .list li:last-child
*/
.btn {
  position: absolute;
  &.active {
    color: red;
  }
}

.list {
  li {
    &:last-child {
      margin-right: 0;
    }
  }
}

.fs {
  &-small {font-size: 12px;}
  &-medium {font-size: 14px;}
  &-large {font-size: 16px;}
}

/* 
[중첩된 속성]
- 네임스페이스 : 이름을 통해 구분 가능한 범위를 만들어내는 것
(font-, margin-, padding-)
*/

.box {
  font: {
    weight: bold;
    size: 10px;
    family: sans-serif;
  };
  margin: {
    top: 10px;
    left: 20px;
  };
  padding: {
    top: 10px;
    bottom: 40px;
    left: 20px;
    right: 30px;
  };
}

/*
[변수(Variables)]
- 재활용이 되는 용도
- 반복되는 수치 or 페이지에서 주요하게 사용되는 색상들을 사용할 때 사용
- 유효범위
  |- container 밖 : 전역변수
  |- container 안 : container안에서만 사용 가능
- 재할당 가능
  |- 재할당 후 사용할 때는 가장 최신의 값으로 사용
*/

/* $size: 200px; */

.container {
  $size: 200px;
  position: fixed;
  top: $size;
  .item {
    $size: 100px;
    width: $size;
    height: $size;
    transform: translateX($size);
  }
  left: $size; /* 100px */
}

/*
[산술 연산]

1. 나누기(/)만 조심
  |- 단축 속성 : 구분하기 위한 용도로 / 사용
    |- font: 10px(size) / 10px(line-height) serif(font-family); 
  |- 사용법 1 : ()
    |- margin: (30px /2)
  |- 사용법 2 : 변수 활용
    |- $size: 30px;
    |- margin: $size / 2;
  |- 사용법 3 : 다른 산술연산자 사용
    |- margin: (10px + 12px) /2;

2. calc 함수
  |- 동일하지 않은 단위 연산할 때 사용
    |- width: calc(100% - 200px);
*/


/*
[재활용(Mixins)]
- 재활용 할 코드를 @Mixin으로 설정 후 
- @include로 가져와 사용
- 인수 : 함수에 데이터를 담아서 사용할 때 사용 -> (200px)
- 매개변수(= $size)가 인수를 받아 처리
- 인수와 매개변수 순서는 꼭 맞춰줘야한다.
  |- ($size, $color) (80px, green) 
- 키워드 인수
  |- 기본값을 굳이 사용하지 않고 표현
    |- ($color: green);
*/

@mixin box($size: 100px, $color: tomato) { /* 기본값 지정 */
  width: $size;
  height: $size;
  background-color: $color;
}
.container {
  @include box(200px, red);
  .item {
    @include box($color: green);
  }
}
.box {
  @include box;
}

/*
[반복문]
- @for
- 보간법 사용 : #{}
- JS와 다르게 0 베이스가 아니고 1부터 시작
*/
@for $i from 1 through 10 {
  .box:nth-child(#{i}) {
    width: 100px * $i;
  }
}